<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo tranquilpeak theme</title>
    <link>https://delta5738.github.io/</link>
    <description>Recent content on Hugo tranquilpeak theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 Jul 2022 01:03:39 +0900</lastBuildDate><atom:link href="https://delta5738.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CSS盒模型</title>
      <link>https://delta5738.github.io/post/css_boxmodel01/</link>
      <pubDate>Fri, 15 Jul 2022 01:03:39 +0900</pubDate>
      
      <guid>https://delta5738.github.io/post/css_boxmodel01/</guid>
      <description>CSS盒模型基本概念 当对一个文档进行布局的时候，浏览器的渲染引擎会根据标准之一的 CSS 基础框盒模型 所有元素表示为一个个矩形的盒子（box）。CSS 决定这些盒子的大小、位置以及属性（例如颜色、背景、边框尺寸…） 每个盒子由四个部分组成，内容边界 Content edge、内边距边界 Padding Edge、边框边界 Border Edge、外边框边界 Margin Edge 盒模型包括两种1:border-box;2:content-box border-box宽度包含整个border,padding,content,margin,border是整个BOX的边界(好用一些) content-box宽度只包括整个content,content是整个BOX的边界 没有指定padding或者宽度,则两者差别不大 display:inline_block可以取消margin合并 CSS是不正交的,属性之间会互相影响 第一个子元素和最后一个子元素,上下会和父元素外边距合并 overflow 溢出 内容宽度或者高度大于容器的,会溢出 可用overflow设置是否显示滚动条 auto是灵活设置 scroll是永远显示 hidden是隐藏溢出部分 visible是显示溢出部分 overflow可以分为overflow-x和overflow-y margin合并 父子margin合并 兄弟margin合并 如何阻止合并 父子合并用padding/border挡住 父子合并用overflow:hidden挡住 父子合并用display:flex挡住 兄弟合并是符合预期的 兄弟合并可以用inline-block消除 </description>
    </item>
    
    <item>
      <title>HTML入门笔记1</title>
      <link>https://delta5738.github.io/post/html-markup-1/</link>
      <pubDate>Mon, 04 Jul 2022 01:03:39 +0900</pubDate>
      
      <guid>https://delta5738.github.io/post/html-markup-1/</guid>
      <description>&lt;h2 id=&#34;html发明者&#34;&gt;HTML发明者&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;1980年，物理学家蒂姆·伯纳斯-李在欧洲核子研究中心（CERN）在承包工程期间，为使CERN的研究人员使用并共享文档，他提出并创建原型系统ENQUIRE。1989年，伯纳斯-李在一份备忘录中提出一个基于互联网的超文本系统[5]。他规定HTML并在1990年底写出浏览器和服务器软件。同年，伯纳斯-李与CERN的数据系统工程师罗伯特·卡里奥联合为项目申请资助，但未被CERN正式批准。在他的个人笔记中[6]伯纳斯-李列举“一些使用超文本的领域”，并把百科全书列为首位[7]。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.m.wikipedia.org/zh/HTML&#34;&gt;https://zh.m.wikipedia.org/zh/HTML&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;html常用标签1&#34;&gt;HTML常用标签(1)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;&amp;lt;!DOCTYPE&amp;gt; &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;!DOCTYPE标签应该位于html文档最前,处于HTML标签之前,它来告知浏览器使用了哪种HTML版本&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;&amp;lt;html&amp;gt;  &lt;!-- raw HTML omitted --&gt;
html表示一个 HTML 文档的根（顶级元素），所以它也被称为根元素。所有其他元素必须是此元素的后代。&lt;/li&gt;
&lt;li&gt;&amp;lt;head&amp;gt; &lt;!-- raw HTML omitted --&gt;
head标签规定文档相关配置信息元数据（Metadata）,包括文档标题,引用的文档样式等&lt;/li&gt;
&lt;li&gt;&amp;lt;meta&amp;gt; &lt;!-- raw HTML omitted --&gt;
meta标签用来表示HTML元数据的属性,如name,字符集等&lt;/li&gt;
&lt;li&gt;&amp;lt;title&amp;gt;&lt;!-- raw HTML omitted --&gt;
title标签定义文档的标题，显示在Browser的标题栏或标签页上。它只应该包含文本，若是包含有标签，则它包含的任何标签都将被忽略&lt;/li&gt;
&lt;li&gt;&amp;lt;style&amp;gt;&lt;!-- raw HTML omitted --&gt;
style标签元素包含文档的样式信息或者文档的部分内容&lt;/li&gt;
&lt;li&gt;&amp;lt;body&amp;gt;&lt;!-- raw HTML omitted --&gt;
body标签表示文档的内容&lt;/li&gt;
&lt;li&gt;&amp;lt;header&amp;gt;&lt;!-- raw HTML omitted --&gt;
header标签用于展示介绍性内容，通常包含一组介绍性的或是辅助导航的实用元素。它可能包含一些标题元素，但也可能包含其他元素，比如 Logo、搜索框、作者名称等&lt;/li&gt;
&lt;li&gt;&amp;lt;div&amp;gt;&lt;!-- raw HTML omitted --&gt;
div标签是一个内容容器,在不使用CSS的情况下，其对内容或布局没有任何影响&lt;/li&gt;
&lt;li&gt;&amp;lt;main&amp;gt;&lt;!-- raw HTML omitted --&gt;
main标签呈现了文档的body或应用的主体部分。主体部分由与文档直接相关，或者扩展于文档的中心主题、应用的主要功能部分的内容组成&lt;/li&gt;
&lt;li&gt;&amp;lt;section&amp;gt;&lt;!-- raw HTML omitted --&gt;
section标签表示一个包含在 HTML 文档中的独立部分，它没有更具体的语义元素来表示，一般来说会有包含一个标题&lt;/li&gt;
&lt;li&gt;&amp;lt;h1-h6&amp;gt;&lt;!-- raw HTML omitted --&gt;
h1-h6标签 (Heading) 呈现了六个不同的级别的标题，h1 级别最高，而 h6级别最低&lt;/li&gt;
&lt;li&gt;&amp;lt;p&amp;gt;&lt;!-- raw HTML omitted --&gt;
p标签表示文本的一个段落&lt;/li&gt;
&lt;li&gt;&amp;lt;ul&amp;gt;&lt;!-- raw HTML omitted --&gt;
ul标签表示一个内可含多个元素的无序列表或项目符号列表&lt;/li&gt;
&lt;li&gt;&amp;lt;li&amp;gt;&lt;!-- raw HTML omitted --&gt;
li标签用于表示列表里的条目。它必须包含在一个父元素里：一个有序列表 (ol)，一个无序列表 (ul)，或者一个菜单 (menu)。在菜单或者无序列表里，列表条目通常用点排列显示；在有序列表里，列表条目通常在左边显示按升序排列的计数&lt;/li&gt;
&lt;li&gt;&amp;lt;dl&amp;gt;&lt;!-- raw HTML omitted --&gt;
dl标签是一个包含术语定义以及描述的列表&lt;/li&gt;
&lt;li&gt;&amp;lt;pre&amp;gt;&lt;!-- raw HTML omitted --&gt;
pre标签表示预定义格式文本。在该元素中的文本通常按照原文件中的编排，以等宽字体的形式展现出来，文本中的空白符（比如空格和换行符）都会显示出来。(紧跟在pre开始标签后的换行符也会被省略)&lt;/li&gt;
&lt;li&gt;&amp;lt;code&amp;gt;&lt;!-- raw HTML omitted --&gt;
code标签呈现一段计算机代码。默认情况下，它以浏览器的默认等宽字体显示&lt;/li&gt;
&lt;li&gt;&amp;lt;em&amp;gt;&lt;!-- raw HTML omitted --&gt;
em标签标记出需要用户着重阅读的内容&lt;/li&gt;
&lt;li&gt;&amp;lt;strong&amp;gt;&lt;!-- raw HTML omitted --&gt;
strong标签表示文本十分重要，一般用粗体显示&lt;/li&gt;
&lt;li&gt;&amp;lt;quote&amp;gt;&lt;!-- raw HTML omitted --&gt;
quote标签用于设置引号的样式&lt;/li&gt;
&lt;li&gt;&amp;lt;aside&amp;gt;&lt;!-- raw HTML omitted --&gt;
aside标签表示一个和其余页面内容几乎无关的部分，被认为是独立于该内容的一部分并且可以被单独的拆分出来而不会使整体受影响,其通常表现为侧边栏或者标注框&lt;/li&gt;
&lt;li&gt;&amp;lt;footer&amp;gt;&lt;!-- raw HTML omitted --&gt;
footer标签表示最近一个章节内容或者根节点（sectioning root ）元素的页脚。一个页脚通常包含该章节作者、版权数据或者与文档相关的链接等信息&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>HTML标签学习2</title>
      <link>https://delta5738.github.io/post/html-markup-2/</link>
      <pubDate>Sat, 02 Jul 2022 01:04:12 +0900</pubDate>
      
      <guid>https://delta5738.github.io/post/html-markup-2/</guid>
      <description>&lt;h2 id=&#34;难点1&#34;&gt;难点1&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;a&amp;gt; href&lt;!-- raw HTML omitted --&gt;
a标签可以通过它的 href 属性创建通向其他网页、文件、同一页面内的位置、电子邮件地址或任何其他 URL 的超链接;&lt;!-- raw HTML omitted --&gt;
download属性,此属性指示浏览器下载 URL 而不是导航到它，因此将提示用户将其保存为本地文件;&lt;!-- raw HTML omitted --&gt;
也可以执行JS伪协议,有时候会用来做一个点击之后没有动作的a标签;&lt;!-- raw HTML omitted --&gt;
加入#id,可以查看指定内容;&lt;!-- raw HTML omitted --&gt;
a href=&amp;ldquo;mailto:XXX&amp;quot;可以发邮件到XXX邮箱;&lt;!-- raw HTML omitted --&gt;
a href=&amp;ldquo;tel:XXX&amp;quot;可以打电话到指定号码;&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;难点2&#34;&gt;难点2&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;a&amp;gt; target&lt;!-- raw HTML omitted --&gt;
a标签的target属性指定在何处显示链接的资源:&lt;!-- raw HTML omitted --&gt;
target=&amp;quot;_self&amp;rdquo;: 当前页面加载&lt;!-- raw HTML omitted --&gt;
target=&amp;quot;_blank&amp;rdquo;: 新窗口打开&lt;!-- raw HTML omitted --&gt;
target=&amp;quot;_parent&amp;quot;: 在当前链接框架上一级标签打开页面&lt;!-- raw HTML omitted --&gt;
target=&amp;quot;_top&amp;quot;: 在顶级窗口打开页面&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;难点3&#34;&gt;难点3&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;iframe&amp;gt;内嵌窗口,但是已经很少用了 &lt;!-- raw HTML omitted --&gt;
name属性用于定位嵌入的浏览上下文的名称。该名称可以用作 a标签与 form标签的 target 属性值，还可以用作 window.open() 方法的 windowName 参数值&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;难点4&#34;&gt;难点4&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;table&amp;gt;&lt;!-- raw HTML omitted --&gt;
table标签表示表格数据 — 即通过二维数据表表示的信息&lt;!-- raw HTML omitted --&gt;
table标签只能含有3个元素thead,tbody,tfoot以及&lt;!-- raw HTML omitted --&gt;
&amp;lt;th&amp;gt;元素定义表格内的表头单元格&lt;!-- raw HTML omitted --&gt;
&amp;lt;td&amp;gt;元素定义了一个包含数据的表格单元格&lt;!-- raw HTML omitted --&gt;
如果没写thead,tbody,tfoot,只写了th和td,浏览器补全thead,tbody,tfoot&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;table-layout CSS 属性定义了用于布局表格单元格，行和列的算法&lt;!-- raw HTML omitted --&gt;
table-layout: fixed表格行和列的宽度通过表格的宽度来设置，某一列的宽度仅由该列首行的单元格决定。在当前列中，该单元格所在行之后的行并不会影响整个列宽;&lt;!-- raw HTML omitted --&gt;
auto:大多数浏览器采用自动表格布局算法对表格布局。表格及单元格的宽度取决于其包含的内容。&lt;!-- raw HTML omitted --&gt;
border-collapse CSS 属性是用来决定表格的边框是分开的还是合并的。在分隔模式下，相邻的单元格都拥有独立的边框。&lt;!-- raw HTML omitted --&gt;在合并模式下，相邻单元格共享边框。&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;难点5&#34;&gt;难点5&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;img&amp;gt;&lt;!-- raw HTML omitted --&gt;
img标签将一份图像嵌入文档,它发出一个GET请求,展示一张图片.&lt;!-- raw HTML omitted --&gt;
src 属性是必须的，它包含了你想嵌入的图片的文件路径&lt;!-- raw HTML omitted --&gt;
alt 属性如果由于某种原因无法加载图像，普通浏览器也会在页面上显示alt 属性中的备用文本：例如，网络错误、内容被屏蔽或链接过期时。&lt;!-- raw HTML omitted --&gt;
例子:&amp;lt;img&amp;gt;&amp;lt; class=&amp;ldquo;fit-picture&amp;rdquo;
src=&amp;quot;/media/cc0-images/grapefruit-slice-332-332.jpg&amp;quot;
alt=&amp;ldquo;图形加载失败&amp;rdquo;&amp;gt;&lt;!-- raw HTML omitted --&gt;
height属性指定图像高度,单位是CSS像素&lt;!-- raw HTML omitted --&gt;
width属性指定图像宽度,单位是CSS像素&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;注意!永远不要让图片变形&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;onerror事件,用来替代出错时的图&lt;/li&gt;
&lt;li&gt;响应式:max-width 属性用来给元素设置最大宽度值。定义了 max-width 的元素会在达到 max-width 值之后避免进一步按照 width 属性设置变大。(手机页面适用)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;难点6-表单&#34;&gt;难点6 表单&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;form&amp;gt;&lt;!-- raw HTML omitted --&gt;
form标签表示文档中的一个区域，此区域包含交互控件，用于向 Web 服务器提交信息。&lt;!-- raw HTML omitted --&gt;
action属性处理表单提交的 URL;&lt;!-- raw HTML omitted --&gt;
method属性浏览器使用这种 HTTP 方式来提交表单,可能的有;POST;GET等&lt;!-- raw HTML omitted --&gt;
autocomplete属性用于指示 input 元素是否能够拥有一个默认值，此默认值是由浏览器自动补全的。&lt;!-- raw HTML omitted --&gt;
target属性表示在提交表单之后，在哪里显示响应信息。&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;&amp;lt;input&amp;gt;&lt;!-- raw HTML omitted --&gt;
input标签用于为基于 Web 的表单创建交互式控件，以便接受来自用户的数据; 里面最好不要有任何数据和标签&lt;/li&gt;
&lt;li&gt;&amp;lt;button&amp;gt;&lt;!-- raw HTML omitted --&gt;
button标签表示一个可点击的按钮，可以用在表单或文档其它需要使用简单标准按钮的地方。里面可以含有标签和数据;&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;input type 还可以是text,color,password,radio,checkbox(可以name来确定是否是一组的),file(用multiple多选文件),hidden(一般用来给机器输入)等&lt;/li&gt;
&lt;li&gt;textarea标签表示一个多行纯文本编辑控件，当你希望用户输入一段相当长的、不限格式的文本，例如评论或反馈表单中的一段意见时，这很有用。&lt;/li&gt;
&lt;li&gt;select标签表示一个提供选项菜单的控件&lt;/li&gt;
&lt;li&gt;onchange用户输入改变的时候触发的事件;onfocus事件是用户鼠标集中到身上的时候触发的事件;onblur是用户鼠标出来的时候触发的事件&lt;/li&gt;
&lt;li&gt;HTML5有自带验证器&lt;/li&gt;
&lt;li&gt;注意:1.一般不监听input的click事件;2.input都要有name属性;3.&lt;!-- raw HTML omitted --&gt;一个表单必须含有type=&amp;ldquo;submit&amp;quot;表单才可以提交;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
